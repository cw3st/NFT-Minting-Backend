/**
 * @swagger
 * components:
 *   schemas:
 *     WalletVerification:
 *       type: object
 *       required:
 *         - message
 *         - signature
 *         - walletAddress
 *       properties:
 *         message:
 *           type: string
 *           description: The message that was signed by the wallet.
 *         signature:
 *           type: string
 *           description: The cryptographic signature generated by the wallet.
 *         walletAddress:
 *           type: string
 *           description: The public wallet address expected to have signed the message.
 *       example:
 *         message: "Please sign this message to verify your wallet."
 *         signature: "0x..."
 *         walletAddress: "0x123456789abcdef"
 *
 * description: |
 *   Utility function to verify that a message was signed by the owner of a given wallet address.
 *   Uses ethers.js to recover the address from the signature and compares it to the provided address.
 */

const { ethers } = require("ethers") ;

const verifyWalletSignature = (message, signature, walletAddress) => {
  try {
    const recoveredAddress = ethers.verifyMessage(message, signature);
    return recoveredAddress.toLowerCase() === walletAddress.toLowerCase();
  } catch (error) {
    console.error("Signature verification failed:", error);
    return false;
  }
};

module.exports = verifyWalletSignature;